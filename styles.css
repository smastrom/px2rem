:root {
    --mainColor: #e1b23f;
    --baseText: #B3AB94;
    --divider: #6a543c;
    --background: #332c24;
    --backgroundAlt: #50463b;
    --globalLrPadding: 30px;
    --globalTbPadding: 40px;
    --gapSmall: 15px;
    --gapRegular: 30px;
    --gapL: 50px;
    --gapXL: 70px;
    --defaultStack: -apple-system, BlinkMacSystemFont, "Helvetica", "Helvetica Neue", "Arial", sans-serif;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    font-size: 16px;
    height: 100%;
}

body {
    font-family: var(--defaultStack);
    font-weight: 400;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    color: var(--baseText);
    background: var(--background);
    position: relative;
    display: grid;
    justify-content: center;
    justify-items: center;
    grid-template-rows: repeat(2, min-content);
    padding: var(--globalTbPadding) var(--globalLrPadding) 0 var(--globalLrPadding);
    width: 100%;
    height: 100vh;
    row-gap: calc(var(--gapL) * 2);
}

h1, h2, h3, p {
    margin: 0;
}

h1 {
    font-size: 3.5rem;
}

footer {
    display: flex;
    align-items: flex-end;
    justify-content: center;
    width: 100vw;
    margin: 0 calc(var(--globalLrPadding) * -1);
    position: relative;
}

footer svg:nth-child(2) {
    width: 100%;
    height: 280px;
}

.github {
    position: absolute;
    z-index: 1;
    bottom: calc(var(--globalLrPadding) / 2);
}

.github svg {
    width: 40px;
}

.infoPathGroup {
    transition: fill .15s ease; 
}

.logo {
    width: 300px;
    height: 70px;
}

.globalContainer {
    display: grid;
    align-items: center;
    justify-items: center;
    row-gap: var(--gapXL);
}

.logoContainer {
    width: 400px;
    align-items: center;
    display: grid;
    row-gap: var(--gapSmall);
    justify-items: center;
}

.subHeading {
    text-align: center;
}

.baseContainer {
    --width: 260px;
    display: grid;
    align-items: center;
    width: 260px;
    column-gap: var(--gapSmall);
    grid-template-columns: min-content;
    justify-content: center;
    justify-items: center;
    row-gap: var(--gapSmall);
}

.pxRemContainer {
    display: grid;
    grid-template-columns: 1fr 1fr;
    column-gap: var(--gapL);
}

.inputField {
    padding: .8em 3.2rem .8em .8em;
    font-size: 1.25rem;
    -webkit-appearance: none;
    -moz-appearance: textfield;
    border: 2px solid var(--divider);
    max-width: 260px;
    border-radius: 10px;
    position: relative;
    background: transparent;
    transition: border .15s ease, box-shadow .15s ease, color .15s ease;
    -webkit-transition: border .15s ease, box-shadow .15s ease, color .15s ease;
    color: var(--baseText);
    outline: none;
}

.inputField:focus {
    border: 2px solid var(--mainColor);
    box-shadow: 0 0 0 6px var(--backgroundAlt);
}

.inputField::-webkit-outer-spin-button,
.inputField::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.changeBase {
    font-size: .875rem;
    appearance: none;
    border: none;
    background: none;
    text-transform: uppercase;
    color: var(--mainColor);
    cursor: pointer;
}

.infoBaseBtn {
    display: grid;
    grid-template-columns: min-content min-content;
    align-items: center;
    column-gap: .325rem;
    cursor: pointer;
}

.infoBaseBtn svg {
    width: 15px;
}

.tooltipLink {
    color: var(--baseText);
    text-decoration: underline;
    transition: color .15s ease;
}

.tooltipLink:hover {
    color: white;
}

.inputFieldBase {
    width: 100px;
}

.baseTextLabel {
    text-transform: capitalize;
    font-size: 1rem;
    color: var(--baseText);
    cursor: pointer;
}

.inputFieldBase > input {
    width: 100px;
}

.inputFieldRem, .inputFieldPx, .inputFieldBase {
    position: relative;
    display: flex;
    align-items: center;
}

.inputFieldPx::after, .inputFieldBase::after {
    content: "Px";
    display: block;
    right: var(--gapSmall);
    position: absolute;
}

.inputFieldRem::after {
    content: "Rem";
    display: block;
    right: var(--gapSmall);
    position: absolute;
}

.inputFieldBaseInner:disabled {
    color: var(--baseText);
    -webkit-text-fill-color: var(--baseText);
}

.hoverUnderln {
    transition: text-decoration .2s ease;
}

.hoverUnderln:hover {
    text-decoration: underline;
    text-decoration-color: var(--mainColor);
    text-decoration-thickness: 2px;
}

.infoBaseContainer {
    position: relative;
    width: var(--width);
    display: flex;
    justify-content: center;
}

.infoBaseTooltip {
    display: none;
    position: absolute;
    font-size: .825rem;
    background: var(--background);
    color: var(--baseText);
    border: 2px solid var(--mainColor);
    padding: 1em;
    border-radius: 10px;
    left: 0;
    right: 0;
    margin: auto;
    top: var(--gapRegular);
    line-height: 1.4;
    width: var(--width);
    z-index: 1;
}

.showInfoBaseTooltip {
    display: flex;
}

.copyBtn {
    margin-top: .625rem;
    margin-right: var(--gapSmall);
}

.inputWCopy {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
}

.closeButton {
    position: absolute;
    background: none;
    border: none;
    cursor: pointer;
    right: 0;
    bottom: 0;
    width: var(--gapSmall);
    height: var(--gapSmall);
    box-sizing: content-box;
    padding: var(--gapSmall);
}

@media screen and (max-height: 800px) {
    body {
        row-gap: var(--gapL);
    }
}

@media screen and (max-width: 768px) {
    body {
        row-gap: var(--gapL);
    }

    .globalContainer {
        row-gap: var(--gapL);
    }

    .logoContainer {
        width: 100%;
    }

    .pxRemContainer {
        grid-template-columns: 1fr;
        row-gap: var(--gapRegular);
    }

    .infoBaseTooltip {
        position: absolute;
        top: -275px;
        font-size: 1rem;
    }

    .copyBtn {
        padding: .2rem;
    }

    .changeBase {
        font-size: 1rem;
    }

    footer svg:nth-child(2) {
        height: 220px;
    }
}

.skewInAnim {
    animation: skewIn .5s ease;
    -webkit-animation: skewIn .5s ease;
}

.skewOutAnim {
    animation: skewOut .5s ease;
    -webkit-animation: skewOut .5s ease;
}

@keyframes skewIn {
    0% {
        transform: skewY(-5deg) rotate(5deg) translateY(-30px);
        opacity: 0;
    }

    100% {
        transform: skewY(0) rotate(0) translateY(0);
        opacity: 1;
    }
}

@keyframes skewOut {
    0% {
        transform: skewY(0) rotate(0) translateY(0);
        opacity: 1;
    }

    100% {
        transform: skewY(-5deg) rotate(5deg) translateY(-30px);
        opacity: 0;
    }
}

@-webkit-keyframes skewIn {
    0% {
        transform: skewY(-5deg) rotate(5deg) translateY(-30px);
        opacity: 0;
    }

    100% {
        transform: skewY(0) rotate(0) translateY(0);
        opacity: 1;
    }
}

@-webkit-keyframes skewOut {
    0% {
        transform: skewY(0) rotate(0) translateY(0);
        opacity: 1;
    }

    100% {
        transform: skewY(-5deg) rotate(5deg) translateY(-30px);
        opacity: 0;
    }
}